{
  "name": "Excel Comment",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2140,
        40
      ],
      "id": "2a8cb576-84d5-40e8-b731-53174cb18327",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -600,
        265
      ],
      "id": "cdda12a4-fc73-4b45-8877-fd4a76d1bfeb",
      "name": "Merge6"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "handled_comments_excel"
      },
      "name": "Load Handled Comment IDs",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1040,
        340
      ],
      "id": "fc7b9e4d-02a9-4676-b213-63ce74e92292",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "MpxTxEkTMLB3RLfR",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        60,
        -160
      ],
      "id": "df6d2643-36de-4c1e-991c-7183a53beef7",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3e4fabee-5b79-481b-9d1d-05cde4dfb19f",
              "leftValue": "={{ $json.isAlreadyHandled }}",
              "rightValue": "={{ $json.comment_id }}",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "name": "Filter Already Handled Comments1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -160,
        265
      ],
      "id": "086e7029-0fc2-4dee-8170-ab38e11e0046"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1480,
        265
      ],
      "id": "253609ec-bf4a-4852-9795-73da231bff6c",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6d3eaf41-7658-458d-9cc6-ec41699fedef",
              "name": "query['hub.challenge']",
              "value": "={{ $json.query['hub.challenge'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2360,
        40
      ],
      "id": "13067b25-29d6-4f95-9ef4-470cb8a2902e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        436,
        190
      ],
      "id": "32fd46a2-2e5e-4b49-8eea-f0be914efb01",
      "name": "Merge1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        88,
        60
      ],
      "id": "8b78b7a1-11c7-4a8e-afda-7bfa2fa819cd",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "eeXsgL8w8OjtoRXM",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "tableName": "Sam_Sam_chat_histories",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        208,
        60
      ],
      "id": "10fd26a1-1166-4787-b78b-4f14e715446c",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "VJmwRt69tqXDcjjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v22.0/{{ $json.comment_id }}/comments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer [Access Token]"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        656,
        190
      ],
      "id": "4492e261-7f37-4dfd-ade2-f3e344f30569",
      "name": "Facebook : Reply comments"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1d70f742-0848-44b1-8dbe-9b125dc046b3",
              "name": "Number_of_Latest_Posts",
              "type": "number",
              "value": 10
            },
            {
              "id": "6744bb50-c34f-429d-8364-da14c9cbaa77",
              "name": "FB_Page_Id",
              "type": "string",
              "value": "={{ $json.body.entry[0].id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3baf4c3d-e1d0-4ab2-9fac-967311363f49",
      "name": "Set PageID & Number of Latest Posts",
      "type": "n8n-nodes-base.set",
      "position": [
        -2360,
        240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "return items;\n"
      },
      "id": "86bccc87-2738-4209-8094-1c6177a7b455",
      "name": "Reverse Item to Match another Branch",
      "type": "n8n-nodes-base.code",
      "position": [
        -1700,
        440
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "graphApiVersion": "v22.0",
        "node": "={{ $json.id }}",
        "edge": "comments",
        "options": {
          "fields": {
            "field": [
              {
                "name": "=id,from,message,created_time,comment_count"
              }
            ]
          },
          "queryParameters": {
            "parameter": [
              {
                "name": "order",
                "value": "reverse_chronological"
              }
            ]
          }
        }
      },
      "id": "6312022b-f32f-43a5-9702-23b796bf75bc",
      "name": "Facebook : Get Each Post Comments",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        -1700,
        140
      ],
      "typeVersion": 1,
      "credentials": {
        "facebookGraphApi": {
          "id": "23HZtPeVNPgRQaHO",
          "name": "Excel Comment"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "graphApiVersion": "v22.0",
        "node": "={{ $json.FB_Page_Id }}/feed",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "limit",
                "value": "={{ $json.Number_of_Latest_Posts }}"
              }
            ]
          }
        }
      },
      "id": "d298d211-6d4f-4535-81e0-fad28d0b2089",
      "name": "Facebook Graph API : Get Post from Page",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        -2140,
        240
      ],
      "typeVersion": 1,
      "credentials": {
        "facebookGraphApi": {
          "id": "jcxmGYd9ZYVganXB",
          "name": "Élaris Comment"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "id": "651d9719-b4f6-48b4-b21b-32e3759192f2",
      "name": "Split Out Posts",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -1920,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "4d8bd55c-35d0-40db-98ac-a954b0a99710",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.data }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "91be7f59-c48e-4da0-b963-315ec7150269",
      "name": "Filter Out Null Comments",
      "type": "n8n-nodes-base.filter",
      "position": [
        -1260,
        265
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "jsCode": "const sessionId = (() => {\n  try {\n    return $('Webhook').item.json.body.entry?.[0]?.id || 'unknown';\n  } catch (e) {\n    return 'unknown';\n  }\n})();\n\n// 🔄 Nhận dữ liệu từ 2 input của node Merge6\nconst inputComments = $input.all().filter(i => i.json.data);  // Facebook comment data\nconst groupedHandledItems = $input.all().filter(i => i.json.total_entries);  // Grouped Supabase\n\n// 🧱 Tạo set các comment_id đã được xử lý\nconst handledCommentIds = new Set();\nfor (const item of groupedHandledItems) {\n  handledCommentIds.add(item.json.comment_id);\n}\n\n// 🔍 Tạo map để loại bỏ các reply_id trùng nhau\nconst seenReplyIds = new Set();\nconst results = [];\n\nfor (const item of inputComments) {\n  const input = item.json;\n  const comments = input.data || [];\n\n  for (const cmt of comments) {\n    const reply_id = cmt.id;\n    if (seenReplyIds.has(reply_id)) continue; // Đã xử lý rồi, bỏ qua\n\n    seenReplyIds.add(reply_id);\n\n    const name = cmt.from?.name || '';\n    const message = cmt.message || '';\n    const created_time = cmt.created_time || '';\n    const content = input.message || '';\n\n    // Nếu reply_id khớp với comment_id đã xử lý\n    const isAlreadyHandled = handledCommentIds.has(reply_id);\n\n    // Gán comment_id từ supabase nếu đã có\n    const matchedCommentId = isAlreadyHandled ? reply_id : '';\n\n    results.push({\n      json: {\n        sessionId,\n        reply_id,\n        comment_id: matchedCommentId,\n        name,\n        message,\n        created_time,\n        content,\n        isAlreadyHandled\n      }\n    });\n  }\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -380,
        265
      ],
      "id": "60fb0a2a-fecf-4a9c-bfd3-25a9a120da10",
      "name": "Check Handle Comment ID"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n// Nhóm các item theo comment_id\nconst grouped = {};\n\nfor (const item of items) {\n  const { comment_id, reply1_id, reply2_id } = item.json;\n\n  if (!grouped[comment_id]) {\n    grouped[comment_id] = {\n      comment_id,\n      reply1_ids: [],\n      reply2_ids: [],\n      count: 0,\n    };\n  }\n\n  // Gộp reply nếu có\n  if (reply1_id) grouped[comment_id].reply1_ids.push(reply1_id);\n  if (reply2_id) grouped[comment_id].reply2_ids.push(reply2_id);\n\n  grouped[comment_id].count += 1;\n}\n\n// Chuyển kết quả về dạng mảng JSON để n8n xuất ra\nreturn Object.values(grouped).map(entry => ({\n  json: {\n    comment_id: entry.comment_id,\n    reply1_ids: entry.reply1_ids,\n    reply2_ids: entry.reply2_ids,\n    total_entries: entry.count,\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -820,
        340
      ],
      "id": "49282f7d-572f-4d83-9748-3a58bf4be1a1",
      "name": "Filter ID"
    },
    {
      "parameters": {
        "tableId": "handled_comments_excel",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "comment_id",
              "fieldValue": "={{ $json.reply_id }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ new Date().toLocaleString() }}"
            }
          ]
        }
      },
      "name": "Save Comment ID as Handled",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        138,
        240
      ],
      "id": "4a9193ad-f9ef-42c6-913c-e3c81e9cf233",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "MpxTxEkTMLB3RLfR",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "multipleMethods": true,
        "path": "0cde843e-90cd-4a2a-8112-fc5a98dd3b21",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2580,
        140
      ],
      "id": "bb60fadb-0511-4776-b458-86d27d0fa271",
      "name": "Webhook",
      "webhookId": "0cde843e-90cd-4a2a-8112-fc5a98dd3b21"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "263c9e45-7168-44b6-903f-a8240e90935c",
              "leftValue": "={{ $json.data.from.id }}",
              "rightValue": "=603055732891923",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        656,
        440
      ],
      "id": "55237aaf-9c73-497a-a5b2-08258a2f0bd0",
      "name": "Filter",
      "executeOnce": false,
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "graphApiVersion": "v22.0",
        "node": "={{ $json.reply_id }}",
        "edge": "comments",
        "options": {
          "fields": {
            "field": [
              {
                "name": "=id,from,message,created_time,comment_count"
              }
            ]
          },
          "queryParameters": {
            "parameter": [
              {
                "name": "order",
                "value": "reverse_chronological"
              }
            ]
          }
        }
      },
      "id": "4cad10cf-462e-4771-a974-8b56a40b85d8",
      "name": "Facebook : Get Reply on Comments",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        138,
        440
      ],
      "typeVersion": 1,
      "credentials": {
        "facebookGraphApi": {
          "id": "23HZtPeVNPgRQaHO",
          "name": "Excel Comment"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        436,
        440
      ],
      "id": "faa43362-c2f7-4edb-96e0-d089cfd99600",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n// Nhóm các item theo comment_id\nconst grouped = {};\n\nfor (const item of items) {\n  const { comment_id, reply1_id, reply2_id } = item.json;\n\n  if (!grouped[comment_id]) {\n    grouped[comment_id] = {\n      comment_id,\n      reply1_ids: [],\n      reply2_ids: [],\n      count: 0,\n    };\n  }\n\n  // Gộp reply nếu có\n  if (reply1_id) grouped[comment_id].reply1_ids.push(reply1_id);\n  if (reply2_id) grouped[comment_id].reply2_ids.push(reply2_id);\n\n  grouped[comment_id].count += 1;\n}\n\n// Chuyển kết quả về dạng mảng JSON để n8n xuất ra\nreturn Object.values(grouped).map(entry => ({\n  json: {\n    comment_id: entry.comment_id,\n    reply1_ids: entry.reply1_ids,\n    reply2_ids: entry.reply2_ids,\n    total_entries: entry.count,\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1096,
        515
      ],
      "id": "e5b1a57e-914f-4b65-9545-bdea4fbbd389",
      "name": "Filter ID1"
    },
    {
      "parameters": {
        "jsCode": "// Lấy session ID từ node Webhook (nếu không có thì fallback về 'unknown')\nconst sessionId = (() => {\n  try {\n    return $('Webhook').first().json.body?.entry?.[0]?.id || 'unknown';\n  } catch (e) {\n    return 'unknown';\n  }\n})();\n\n// Lấy các reply1_ids và reply2_ids đã xử lý từ Supabase\nconst handledGroups = $items('Filter ID1');\nconst handledReplyIds = new Set();\n\nfor (const item of handledGroups) {\n  const reply1 = item.json.reply1_ids || [];\n  const reply2 = item.json.reply2_ids || [];\n\n  for (const id of reply1) handledReplyIds.add(id);\n  for (const id of reply2) handledReplyIds.add(id);\n}\n\n// Duyệt từng comment input\nconst seenReplyIds = new Set();\nconst results = [];\n\nfor (const item of $input.all()) {\n  const input = item.json;\n\n  const reply_id = input.data?.id || input.id;\n  if (seenReplyIds.has(reply_id)) continue;\n  seenReplyIds.add(reply_id);\n\n  const name = input.data?.from?.name || input.from?.name || '';\n  const message = input.data?.message || input.message || '';\n  const created_time = input.data?.created_time || input.created_time || '';\n  const comment_id = input.comment_id || '';\n  const content = input.message || '';\n\n  const isAlreadyHandled = handledReplyIds.has(reply_id);\n\n  results.push({\n    json: {\n      sessionId,\n      reply_id,\n      reply1_id: isAlreadyHandled ? reply_id : '',\n      comment_id: isAlreadyHandled ? comment_id : '',\n      name,\n      message,\n      created_time,\n      content,\n      isAlreadyHandled\n    }\n  });\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1536,
        440
      ],
      "id": "4a1fbe8e-c057-4a2a-a5fc-f2d36a14ebd5",
      "name": "Check Handled ID"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1316,
        440
      ],
      "id": "3857c5b8-2e89-4a62-81c7-2a3a757de094",
      "name": "Merge3"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "handled_comments_excel",
        "matchType": "allFilters"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        876,
        515
      ],
      "id": "417e64a9-80f0-49c5-bd2b-3e55d84249c6",
      "name": "Load Reply ID",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "MpxTxEkTMLB3RLfR",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v22.0/{{ $json.reply1_id }}/comments",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer [Access Token]"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2572,
        440
      ],
      "id": "a5c84e26-ba56-43b2-a744-c99b0f5eed10",
      "name": "Facebook : Reply comments1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2352,
        440
      ],
      "id": "5b04d6fb-f660-46e0-a9c9-ad48cb545871",
      "name": "Merge2"
    },
    {
      "parameters": {
        "tableId": "handled_comments_excel",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "comment_id",
              "fieldValue": "={{ $json.comment_id }}"
            },
            {
              "fieldId": "reply1_id",
              "fieldValue": "={{ $json.reply_id }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ new Date().toLocaleString() }}"
            }
          ]
        }
      },
      "name": "Save Comment ID as Handled1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2054,
        590
      ],
      "id": "ce735eef-4591-49f1-b1f2-c82a7f01cb10",
      "credentials": {
        "supabaseApi": {
          "id": "MpxTxEkTMLB3RLfR",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ab61e2ed-be50-4c57-8a34-affb6ebd9315",
              "leftValue": "={{ $json.isAlreadyHandled }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1756,
        440
      ],
      "id": "2451d4e5-88f9-4499-bf7b-297776d88fd5",
      "name": "If"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2004,
        410
      ],
      "id": "6644298b-275d-4f59-9fe7-e2dd83d314b5",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "eeXsgL8w8OjtoRXM",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "tableName": "Sam_Sam_chat_histories",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2124,
        410
      ],
      "id": "2a992735-cd56-4efb-9583-caf9cbdc0354",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "VJmwRt69tqXDcjjj",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1976,
        190
      ],
      "id": "3eed45cc-435d-4f83-9ebb-64dd669a72b5",
      "name": "AI Agent2"
    }
  ],
  "pinData": {},
  "connections": {
    "Load Handled Comment IDs": {
      "main": [
        [
          {
            "node": "Filter ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Check Handle Comment ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Already Handled Comments1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save Comment ID as Handled",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Facebook : Get Reply on Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Filter Out Null Comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Facebook : Reply comments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set PageID & Number of Latest Posts": {
      "main": [
        [
          {
            "node": "Facebook Graph API : Get Post from Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reverse Item to Match another Branch": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Facebook : Get Each Post Comments": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Graph API : Get Post from Page": {
      "main": [
        [
          {
            "node": "Split Out Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Posts": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Facebook : Get Each Post Comments",
            "type": "main",
            "index": 0
          },
          {
            "node": "Reverse Item to Match another Branch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Out Null Comments": {
      "main": [
        [
          {
            "node": "Load Handled Comment IDs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Handle Comment ID": {
      "main": [
        [
          {
            "node": "Filter Already Handled Comments1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter ID": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Save Comment ID as Handled": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set PageID & Number of Latest Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook : Get Reply on Comments": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Load Reply ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter ID1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Check Handled ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Reply ID": {
      "main": [
        [
          {
            "node": "Filter ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Handled ID": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Facebook : Reply comments1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Comment ID as Handled1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Save Comment ID as Handled1",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3e92c040-169f-4bc9-a8f8-3ff34cfaeb44",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "0fAJar4TnBB38mKI",
  "tags": [
    {
      "createdAt": "2025-05-27T08:57:37.626Z",
      "updatedAt": "2025-05-27T08:57:37.626Z",
      "id": "FwJyb1kUG4jmv3P5",
      "name": "Customer"
    }
  ]
}